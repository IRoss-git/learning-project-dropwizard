openapi: 3.0.3

info:
  title: Dropwizard API learning Application
  description: "Open api for dropwizard test project"
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: person
    description: person controller

paths:
  /payment_processors:
    post:
      tags:
        - paymentProcessor
      summary: Create new paymentProcessor
      description: new paymentProcessor
      operationId: createPaymentProcessor
      requestBody:
        description: A payload for creating a new paymentProcessor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatePaymentProcessor'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentProcessor'
    get:
      tags:
        - paymentProcessor
      summary: get all paymentProcessors
      description: all paymentProcessors
      operationId: getPaymentProcessors
      parameters:
        - in: query
          name: page_number
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
            default: 5
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReadPaymentProcessor"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_processors/{id}:
    get:
      tags:
        - paymentProcessor
      summary: get payment paymentProcessor
      description: get paymentProcessor by id
      operationId: getPaymentProcessor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentProcessor'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - paymentProcessor
      summary: update paymentProcessor
      description: update paymentProcessor by id
      operationId: updatePaymentProcessor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: A payload for update Person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatePaymentProcessor'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentProcessor'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - paymentProcessor
      summary: delete paymentProcessor
      description: delete paymentProcessor by id
      operationId: deletePaymentProcessor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_processor/{payment_processor_id}/payment_failure_reason:
    post:
      tags:
        - Payment failure reason
      summary: Create payment failure reason
      description: The endpoint associating creating payment failure reason
      operationId: createPaymentFailureReason
      parameters:
        - name: "payment_processor_id"
          in: "path"
          description: The ID of the payment processor
          required: true
          schema:
            type: string
      requestBody:
        description: A payload for payment failure reason
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatePaymentFailureReason'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentFailureReason'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Payment failure reason
      summary: Get all failure reasons by processor
      description: The endpoint retrieves the list of reasons associated with processor
      operationId: getAllPaymentFailureReasonByPaymentProcessor
      parameters:
        - name: "payment_processor_id"
          in: "path"
          description: The ID of the generic failure reason
          required: true
          schema:
            type: string
        - in: query
          name: page_number
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
            default: 5
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReadPaymentFailureReason"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_processor/{payment_processor_id}/payment_failure_reason/{id}:
    get:
      tags:
        - Payment failure reason
      summary: Get failure reason by id in specified payment processor
      description: The endpoint retrieves an existing failure reason
        associated with the specified department
      operationId: getPaymentFailureReason
      parameters:
        - name: "payment_processor_id"
          in: "path"
          description: id of payment processor
          required: true
          schema:
            type: string
        - name: "id"
          in: "path"
          description: id of payment failure reason
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentFailureReason'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Payment failure reason
      summary: Delete payment failure reason by ID
      description: The endpoint updates payment failure reason
      operationId: updatePaymentFailureReason
      parameters:
        - name: "payment_processor_id"
          in: "path"
          description: id of payment processor
          required: true
          schema:
            type: string
        - name: "id"
          in: "path"
          description: id of payment failure reason
          required: true
          schema:
            type: string
      requestBody:
        description: A payload for update Person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdatePaymentFailureReason'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentFailureReason'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Payment failure reason
      summary: Delete house by ID
      description: The endpoint deletes payment failure reason
      operationId: deletePaymentFailureReason
      parameters:
        - name: "payment_processor_id"
          in: "path"
          description: id of payment processor
          required: true
          schema:
            type: string
        - name: "id"
          in: "path"
          description: id of payment failure reason
          required: true
          schema:
            type: string
      responses:
        204:
          $ref: '#/components/responses/NoContentResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_generic_failure_reason:
    post:
      tags:
        - generic reason
      summary: Create new payment failure generic reason
      description: new payment failure generic reason
      operationId: createPaymentGenericFailureReason
      requestBody:
        description: A payload for creating a new payment failure generic reason
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateGenericPaymentFailureReason'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadGenericPaymentFailureReason'
    get:
      tags:
        - generic reason
      summary: get all payment failure generic reason
      description: all payment failure generic reason
      operationId: getPaymentGenericFailureReasons
      parameters:
        - in: query
          name: page_number
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
            default: 5
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReadGenericPaymentFailureReason"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_generic_failure_reason/{id}:
    get:
      tags:
        - generic reason
      summary: get payment failure generic reason
      description: get payment failure generic reason by id
      operationId: getPaymentGenericFailureReason
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadGenericPaymentFailureReason'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - generic reason
      summary: update payment failure reason
      description: update payment failure generic reason by id
      operationId: updatePaymentGenericFailureReason
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: A payload for update Person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateGenericPaymentFailureReason'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadGenericPaymentFailureReason'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - generic reason
      summary: delete payment failure generic reason
      description: delete payment failure generic reason by id
      operationId: deletePaymentGenericFailureReason
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_generic_failure_reason/{payment_generic_failure_reason_id}/payment_failure_reason:
    post:
      tags:
        - Payment failure reason mapping with generic
      summary: Set person for department
      description: The endpoint associating person with department
      operationId: setRefPaymentFailureReason
      parameters:
        - name: "payment_generic_failure_reason_id"
          in: "path"
          description: The ID of the generic failure reason
          required: true
          schema:
            type: string
      requestBody:
        description: A payload for set department for person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefPaymentFailureReason'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPaymentFailureReason'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Payment failure reason mapping with generic
      summary: Get all failure reasons by generic
      description: The endpoint retrieves the list of reasons associated with generic reason
      operationId: getAllPaymentFailureReasonByGenericReason
      parameters:
        - name: "payment_generic_failure_reason_id"
          in: "path"
          description: The ID of the generic failure reason
          required: true
          schema:
            type: string
        - in: query
          name: page_number
          schema:
            type: integer
            format: int64
            minimum: 1
            default: 1
        - in: query
          name: page_size
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
            default: 5
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReadPaymentFailureReason"
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/InternalServerError'
  /payment_generic_failure_reason/{payment_generic_failure_reason_id}/payment_failure_reason/{id}:
    delete:
      tags:
        - Payment failure reason mapping with generic
      summary: delete payment failure generic mapping
      description: delete payment failure generic reason mapping by id
      operationId: deleteMappingPaymentGenericFailureReason
      parameters:
        - name: payment_generic_failure_reason_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        409:
          $ref: '#/components/responses/Conflict'
        default:
          $ref: '#/components/responses/InternalServerError'
  /persons/content/:
    post:
      tags:
        - Person content
      summary: Create
      description: The endpoint creates content
      operationId: createContent
      requestBody:
        description: A payload for create new content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContent'
      responses:
        201:
          $ref: '#/components/schemas/CreateContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        default:
          $ref: '#/components/responses/InternalServerError'
  /persons/content/{key}:
    get:
      tags:
        - Person content
      summary: Get Content by key
      description: The endpoint retrieves a content
      operationId: getContent
      parameters:
        - name: "key"
          in: "path"
          description: The key of the content
          required: true
          schema:
            type: string
            example: somekey
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Base:
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: Some name
          minLength: 4
          maxLength: 45
        description:
          type: string
          example: Description
          minLength: 4
          maxLength: 45
    CreateUpdatePaymentProcessor:
      required:
        - key
      allOf:
        - $ref: '#/components/schemas/Base'
      properties:
        key:
          type: string
          example: SomeProcessor
          minLength: 4
          maxLength: 45
    ReadPaymentProcessor:
      properties:
        id:
          type: string
          example: bfbfded2-2cde-4450-925f-e96fbc75c88d
        key:
          type: string
          example: SomeProcessor
          minLength: 4
          maxLength: 45
      allOf:
        - $ref: '#/components/schemas/Base'
    CreateUpdatePaymentFailureReason:
      required:
        - code
      allOf:
        - $ref: '#/components/schemas/Base'
      properties:
        code:
          type: string
          example: Some Code
          minLength: 4
          maxLength: 45
    ReadPaymentFailureReason:
      properties:
        id:
          type: string
          example: bfbfded2-2cde-4450-925f-e96fbc75c88d
        code:
          type: string
          example: Some Code
          minLength: 4
          maxLength: 45
      allOf:
        - $ref: '#/components/schemas/Base'
    CreateUpdateGenericPaymentFailureReason:
      required:
        - code
      allOf:
        - $ref: '#/components/schemas/Base'
      properties:
        code:
          type: string
          example: Some Code
          minLength: 4
          maxLength: 45
    ReadGenericPaymentFailureReason:
      required:
        - id
        - code
      properties:
        id:
          type: string
          example: bfbfded2-2cde-4450-925f-e96fbc75c88d
        code:
          type: string
          example: Some Code
          minLength: 4
          maxLength: 45
      allOf:
        - $ref: '#/components/schemas/Base'
    CreateContent:
      type: object
      properties:
        key:
          type: string
          example: key
        value:
          type: string
          example: Some secret content
    ReadContent:
      type: object
      properties:
        value:
          type: string
          example: Some content
    RefPaymentFailureReason:
      type: object
      properties:
        reason_id:
          type: string
    ApiError:
      type: object
      properties:
        response_code:
          type: integer
          example: 404
        error_message:
          type: string
          example: "example"
  responses:
    NoContentResponse:
      description: The request was succesfully processed.
    BadRequest:
      description: Validation Exception.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Unauthorized:
      description: Unauthorized.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Forbidden:
      description: You do not have permission to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    Conflict:
      description: Conflict with current state of the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
    InternalServerError:
      description: Something went wrong.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'

